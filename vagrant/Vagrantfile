# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  
  ## Sources (not required for vagrantup.com)
  #config.vm.box_url = "http://files.vagrantup.com/customBox.box"
  #config.vm.box_url = "file:///C:/path/to/vagrant/customBox.box"
  #config.vm.box_url = "file:///opt/vagrant/boxes/customBox.box"
  
  
  
  
  
  ## Box (required) - Template
  config.vm.box = "vavyskov/symfony"
  
  ## Enable when do not use "Template"
#  config.vm.box = "debian/contrib-stretch64"
#  config.vm.provision :shell, path: "config/symfony.sh"
#  config.vm.provision :shell, path: "config/symfony-dev.sh"





  ## Hostname
  config.vm.hostname = "devel.example.com"



  ## Guest hostname with prefix from the host computer
  ## https://stackoverflow.com/questions/25213786/vagrant-get-name-of-host-os
  #config.vm.hostname = "#{`hostname`[0..-2]}".sub(/\..*$/,'')+".example.com"

  ## Public network (allows access on network)
  #config.vm.network "public_network", type: "dhcp", bridge: 'en0: Wi-Fi (AirPort)'



  ## IP
  config.vm.network "private_network", ip: "192.168.33.10"

  ## MailCatcher
  config.vm.network "forwarded_port", guest: 1080, host: 1080, host_ip: "127.0.0.1"
  config.vm.network "forwarded_port", guest: 1025, host: 1025, host_ip: "127.0.0.1"





  ## Port forwarding with ports <= 1024 may not work.
  ## Unix-based hosts (e.g. Linux, Solaris, Mac OS X) restrict ports <= 1024 to only privileged process
  ## (typically processes running as an administrative user).

  ## The VirtualBox Manual says this about NAT mode limitation:
  ## Forwarding host ports < 1024 impossible
  ## On Unix-based hosts (e.g. Linux, Solaris, Mac OS X) it is not possible to bind to ports below 1024
  ## from applications that are not run by root. As a result, if you try to configure such a port forwarding,
  ## the VM will refuse to start.

  ## You can config port forwarding into VirtualBox:
  ## Your VM -> Settings -> Network -> Advanced -> ports forwarding (here you can add ports that you need)

  ## HTTP and HTTPS
  if Vagrant::Util::Platform.windows? then
    config.vm.network "forwarded_port", guest: 80, host: 80, host_ip: "127.0.0.1"
    config.vm.network "forwarded_port", guest: 443, host: 443, host_ip: "127.0.0.1"

    #myHomeDir = ENV["USERPROFILE"]

  else
    config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
    config.vm.network "forwarded_port", guest: 443, host: 4443, host_ip: "127.0.0.1"

    #myHomeDir = "~"

  end

  ## Linux
  if Vagrant::Util::Platform.linux? then

    ## Port forwarding ???

  end

  ## FixMe: Apple detection do not work
  #if Vagrant::Util::Platform.platform =~ /darwin/ then
  if Vagrant::Util::Platform.darwin? then

    ## Enable port forwarding on startup
    config.trigger.after [:provision, :up, :reload] do |portup|
      portup.info = "Enable port forwarding on startup..."
      portup.run = {inline: "echo '
        rdr pass on lo0 inet proto tcp from any to 127.0.0.1 port 80 -> 127.0.0.1 port 8080
        rdr pass on lo0 inet proto tcp from any to 127.0.0.1 port 443 -> 127.0.0.1 port 4443
      ' | sudo pfctl -ef - > /dev/null 2>&1"}
    end

    # Disable port forwarding on shutdown
    config.trigger.before [:halt, :destroy] do |portdown|
      portdown.info = "Disable port forwarding on shutdown..."
      portdown.run = {inline: "sudo pfctl -df /etc/pf.conf > /dev/null 2>&1"}
    end

  end










  ## Launch apache on startup
  config.vm.provision "shell", inline: "service apache2 restart", run: "always"










  ## Share folder  
  config.vm.synced_folder "../workspace", "/var/nfs",
    id:"default",
    type:"nfs", 
    mount_options:['rw','vers=3','tcp'],
    linux__nfs_options:['rw', 'no_subtree_check', 'all_squash', 'async'],
    bsd__nfs_options:['rw', 'no_subtree_check', 'all_squash', 'async']

  config.nfs.map_uid = Process.uid
  config.nfs.map_gid = Process.gid
  
  config.bindfs.bind_folder "/var/nfs", "/home/vagrant/www"
  
  #config.bindfs.bind_folder "/vagrant-after-provision", "another/guest/mount/point", after: :provision





  ## Backup database
  config.trigger.before [:halt, :suspend, :destroy] do |backup|
    backup.info = "The database backup is in progress..."
    backup.run_remote = {inline: "/vagrant/config/db-backup.sh #{`hostname`[0..-2]}"}
  end
  
  ## Restore database
  config.trigger.after [:up, :resume, :reload] do |restore|
    restore.info = "The database restore is in progress..."
    restore.run_remote = {inline: "/vagrant/config/db-restore.sh #{`hostname`[0..-2]}"}
  end

  ## Package purge
  config.trigger.before [:package] do |package|
    package.info = "Package purge is in progress..."
    package.run_remote = {inline: "/vagrant/config/purge.sh"}
  end



  config.vm.post_up_message = <<MSG
------------------------------------------------------
Local development, accessible at 127.0.0.1

URLS:
 - web             - http://localhost
 - adminer         - http://localhost/adminer

------------------------------------------------------
MSG






  ## VirtualBox
  config.vm.provider "virtualbox" do |vb|
    vb.name = "symfony"
    vb.cpus = 1
    vb.memory = 2048
    ## HDD cache off !!!
    vb.customize [
      "storagectl", :id, 
      "--name", "SATA Controller", 
      "--hostiocache", "off"
    ]
    ## Fix slow DNS lookups
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

end
